# To create new data frame with differential expression data (DESeq2 and edgeR)
df_general<- merge(results_DESeq2_rt, results_Edge_rt, by = "rownames",  all.x=TRUE)
colnames(df_general)<- c( "rownames","log2FoldChange_D2","pvalue_D2","padj_D2" ,
"sig_D2", "sigadj_D2","TDE_D2","logFC_ER","PValue_ER",
"FDR_ER", "sig_ER", "sigadj_ER","TDE_ER")
df_general$color <- ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == TRUE), "Col_1", #DESeq2 and EdgeR
ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == FALSE), "Col_2", # Only DESeq2
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == TRUE), "Col_3", # Only EdgeR
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == FALSE), "Col_4", "Col_5"))))# No Differential Expression
rownames(df_general)<- df_general$rownames
View(df_general)
# General
write.table(df_general, "../../data/Over_Down/GENERAL_C_TvsD.txt", sep="\t", row.names=T)
# Plot Volcano plot
ggplot(df_general, aes(x=logFC_ER, y=sig_ER)) +
geom_point(aes(colour =  color ),size =2.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
# Plot Volcano plot
ggplot(df_general, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =2.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggsave("../../outputs/8_1_VP_General_sinN_C_TvsD_D2.tiff")
# Plot Volcano plot
ggplot(df_general, aes(x=logFC_ER, y=sig_ER)) +
geom_point(aes(colour =  color ),size =2.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggsave("../../outputs/8_1_VP_General_sinN_C_TvsD_ER.tiff")
# Plot Volcano plot
ggplot(df_general, aes(x=logFC_ER, y=sig_ER)) +
geom_point(aes(colour =  color ),size =2.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
# Particular
D2_ER_genes <-subset(df_general, subset= color == "Col_1")
D2_ER_genes$rownames
D2_genes <-subset(df_general, subset= color == "Col_2")
D2_genes$rownames
ER_genes <-subset(df_general, subset= color == "Col_3")
ER_genes$rownames
write.table(D2_ER_genes, "../../data/Over_Down/SPECIFIC/D2_ER_C_TvsD.txt", sep="\t", row.names=T)
write.table(D2_genes, "../../data/Over_Down/SPECIFIC/D2_C_TvsD.txt", sep="\t", row.names=T)
write.table(ER_genes, "../../data/Over_Down/SPECIFIC/ER_C_TvsD.txt", sep="\t", row.names=T)
write.table(genesDEcomun_over ,"../../data/Over_Down/SPECIFIC/IDs/IDs_D2_ER_C_TvsD_over.txt",sep = "\t", row.names = F, col.names = F)
write.table(genesDEcomun_down ,"../../data/Over_Down/SPECIFIC/IDs/IDs_D2_ER_C_TvsD_down.txt",sep = "\t", row.names = F, col.names = F)
write.table(genesDEcomun_over ,"../../data/Over_Down/SPECIFIC/IDs/IDs_D2_ER_C_TvsD_overinDamaged.txt",sep = "\t", row.names = F, col.names = F)
write.table(genesDEcomun_down ,"../../data/Over_Down/SPECIFIC/IDs/IDs_D2_ER_C_TvsD_downinDamaged.txt",sep = "\t", row.names = F, col.names = F)
knitr::opts_chunk$set(echo = TRUE)
results_DESeq2<- read.delim("../../data/DGE/DESeq2_DSvsDC_FDR_5.txt") ## TENGO ESTO 2 VECES EN LA MISMA TABLA
results_Edge<- read.delim("../../data/DGE/EdgeR_DSvsDC_FDR_5.txt")
#### Remake and color
# Remake tables with info that I want
results_DESeq2_rt <- data.frame(results_DESeq2[,c(2,5,6)])
results_Edge_rt <- data.frame(results_Edge[,c(1,3,4)])
results_DESeq2_rt$sig <- -log10(results_DESeq2$pvalue) ##Create a column with aditional info of FDR (padj)##
results_DESeq2_rt$sigadj <- -log10(results_DESeq2$padj) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sig <- -log10(results_Edge$PValue) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sigadj <- -log10(results_Edge$FDR) ##Create a column with aditional info of FDR (padj)##
##Create a column with colors depending p-adj##
results_DESeq2_rt$TDE <- (results_DESeq2_rt$padj< 0.05) & (abs(results_DESeq2_rt$log2FoldChange) > 1)
results_Edge_rt$TDE <- (results_Edge_rt$FDR< 0.05) & (abs(results_Edge_rt$logFC) > 1)
# Make table with over and down expressed
overxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]> 1, ]
downxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]< -1, ]
overxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]> 1, ]
downxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]< -1, ]
results_DESeq2<- read.delim("../../data/DGE/DESeq2_DSvsDC_FDR_5.txt") ## TENGO ESTO 2 VECES EN LA MISMA TABLA
results_Edge<- read.delim("../../data/DGE/EdgeR_DSvsDC_FDR_5.txt")
# Remake tables with info that I want
results_DESeq2_rt <- data.frame(results_DESeq2[,c(2,5,6)])
results_Edge_rt <- data.frame(results_Edge[,c(1,3,4)])
View(results_DESeq2_rt)
View(results_Edge_rt)
# up and down in damage trees during contingency
results_DESeq2_rt$log2FoldChange<-results_DESeq2_rt$log2FoldChange*(-1)
results_Edge_rt$logFC<-results_Edge_rt$logFC*(-1)
results_DESeq2_rt$sig <- -log10(results_DESeq2$pvalue) ##Create a column with aditional info of FDR (padj)##
results_DESeq2_rt$sigadj <- -log10(results_DESeq2$padj) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sig <- -log10(results_Edge$PValue) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sigadj <- -log10(results_Edge$FDR) ##Create a column with aditional info of FDR (padj)##
##Create a column with colors depending p-adj##
results_DESeq2_rt$TDE <- (results_DESeq2_rt$padj< 0.05) & (abs(results_DESeq2_rt$log2FoldChange) > 1)
results_Edge_rt$TDE <- (results_Edge_rt$FDR< 0.05) & (abs(results_Edge_rt$logFC) > 1)
# Make table with over and down expressed
overxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]> 1, ]
downxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]< -1, ]
overxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]> 1, ]
downxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]< -1, ]
genesDEcomun_over <- intersect(rownames(overxpress_Ds2),rownames(overxpress_Ed))
genesDEcomun_over
genesDEcomun_down <- intersect(rownames(downxpress_Ds2),rownames(downxpress_Ed))
genesDEcomun_down
comun_genes_od <- c(genesDEcomun_over,genesDEcomun_down)
comun_genes_od
# To create column with row name
results_DESeq2_rt$rownames <- rownames(results_DESeq2_rt)
results_Edge_rt$rownames <- rownames(results_Edge_rt)
# To create new data frame with differential expression data (DESeq2 and edgeR)
df_general<- merge(results_DESeq2_rt, results_Edge_rt, by = "rownames",  all.x=TRUE)
colnames(df_general)<- c( "rownames","log2FoldChange_D2","pvalue_D2","padj_D2" ,
"sig_D2", "sigadj_D2","TDE_D2","logFC_ER","PValue_ER",
"FDR_ER", "sig_ER", "sigadj_ER","TDE_ER")
df_general$color <- ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == TRUE), "Col_1", #DESeq2 and EdgeR
ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == FALSE), "Col_2", # Only DESeq2
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == TRUE), "Col_3", # Only EdgeR
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == FALSE), "Col_4", "Col_5"))))# No Differential Expression
rownames(df_general)<- df_general$rownames
View(df_general)
genesDEcomun_over <- intersect(rownames(overxpress_Ds2),rownames(overxpress_Ed))
genesDEcomun_over
genesDEcomun_down <- intersect(rownames(downxpress_Ds2),rownames(downxpress_Ed))
genesDEcomun_down
comun_genes_od <- c(genesDEcomun_over,genesDEcomun_down)
comun_genes_od
# General
write.table(df_general, "../../data/Over_Down/GENERAL_D_170Cvs87SS.txt", sep="\t", row.names=T)
# Plot Volcano plot
ggplot(df_general, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggsave("../../outputs/8_1_VP_General_sinN_D_170Cvs87SS_D2.tiff")
# Plot Volcano plot
ggplot(df_general, aes(x=logFC_ER, y=sig_ER)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggsave("../../outputs/8_1_VP_General_sinN_D_170Cvs87SS_ER.tiff")
write.table(D2_ER_genes, "../../data/Over_Down/SPECIFIC/D2_ER_D_170Cvs87SS.txt", sep="\t", row.names=T)
# Particular
D2_ER_genes <-subset(df_general, subset= color == "Col_1")
D2_ER_genes$rownames
D2_genes <-subset(df_general, subset= color == "Col_2")
D2_genes$rownames
ER_genes <-subset(df_general, subset= color == "Col_3")
ER_genes$rownames
write.table(D2_ER_genes, "../../data/Over_Down/SPECIFIC/D2_ER_D_170Cvs87SS.txt", sep="\t", row.names=T)
write.table(D2_genes, "../../data/Over_Down/SPECIFIC/D2_D_170Cvs87SS.txt", sep="\t", row.names=T)
write.table(ER_genes, "../../data/Over_Down/SPECIFIC/ER_D_170Cvs87SS.txt", sep="\t", row.names=T)
write.table(genesDEcomun_over ,"../../data/Over_Down/SPECIFIC/IDs/IDs_D2_ER_D_170Cvs87SS_overinContingency.txt",sep = "\t", row.names = F, col.names = F)
write.table(genesDEcomun_down ,"../../data/Over_Down/SPECIFIC/IDs/IDs_D2_ER_D_170Cvs87SS_downinContingency.txt",sep = "\t", row.names = F, col.names = F)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
TC01_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR1_S179_sw10L50.genesorder.txt", header= FALSE)
TC02_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR2_S180_sw10L50.genesorder.txt", header= FALSE)
TC03_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR3_S181_sw10L50.genesorder.txt", header= FALSE)
TC04_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR4_S182_sw10L50.genesorder.txt", header= FALSE)
TC05_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR5_S183_sw10L50.genesorder.txt", header= FALSE)
TS01_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR11_S189_sw10L50.genesorder.txt", header= FALSE)
TS02_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR12_S190_sw10L50.genesorder.txt", header= FALSE)
TS05_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR13_S191_sw10L50.genesorder.txt", header= FALSE)
DC01_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR6_S184_sw10L50.genesorder.txt", header= FALSE)
DC02_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR7_S185_sw10L50.genesorder.txt", header= FALSE)
DC03_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR8_S186_sw10L50.genesorder.txt", header= FALSE)
DC04_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR9_S187_sw10L50.genesorder.txt", header= FALSE)
DC05_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR10_S188_sw10L50.genesorder.txt", header= FALSE)
DS01_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR14_S192_sw10L50.genesorder.txt", header= FALSE)
DS02_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR15_S193_sw10L50.genesorder.txt", header= FALSE)
DS04_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR16_S194_sw10L50.genesorder.txt", header= FALSE)
TC01_17<-read.delim("../../data/TXT/GENES_ORDER/DPVR17_S195_sw10L50.genesorder.txt", header= FALSE)
DC04_17<-read.delim("../../data/TXT/GENES_ORDER/DPVR18_S196_sw10L50.genesorder.txt", header= FALSE)
head(DC05_15)
colnames(DC01_15)<- c("number_reads", "name_gen")
colnames(DC02_15)<- c("number_reads", "name_gen")
colnames(DC03_15)<- c("number_reads", "name_gen")
colnames(DC04_15)<- c("number_reads", "name_gen")
colnames(DC05_15)<- c("number_reads", "name_gen")
colnames(DS01_15)<- c("number_reads", "name_gen")
colnames(DS02_15)<- c("number_reads", "name_gen")
colnames(DS04_15)<- c("number_reads", "name_gen")
colnames(TC01_15)<- c("number_reads", "name_gen")
colnames(TC02_15)<- c("number_reads", "name_gen")
colnames(TC03_15)<- c("number_reads", "name_gen")
colnames(TC04_15)<- c("number_reads", "name_gen")
colnames(TC05_15)<- c("number_reads", "name_gen")
colnames(TS01_15)<- c("number_reads", "name_gen")
colnames(TS02_15)<- c("number_reads", "name_gen")
colnames(TS05_15)<- c("number_reads", "name_gen")
colnames(TC01_17)<- c("number_reads", "name_gen")
colnames(DC04_17)<- c("number_reads", "name_gen")
head(DC04_17)
all<-read.delim("../../metadata/Name_genes.txt", header= FALSE)
colnames(all)<- "name_gen"
all$DC_1 <- DC01_15$number_reads[match(all$name_gen, DC01_15$name_gen)]
all$DC_2 <- DC02_15$number_reads[match(all$name_gen, DC02_15$name_gen)]
all$DC_3 <- DC03_15$number_reads[match(all$name_gen, DC03_15$name_gen)]
all$DC_4 <- DC04_15$number_reads[match(all$name_gen, DC04_15$name_gen)]
all$DC_5 <- DC05_15$number_reads[match(all$name_gen, DC05_15$name_gen)]
all$DS_1 <- DS01_15$number_reads[match(all$name_gen, DS01_15$name_gen)]
all$DS_2 <- DS02_15$number_reads[match(all$name_gen, DS02_15$name_gen)]
all$DS_4 <- DS04_15$number_reads[match(all$name_gen, DS04_15$name_gen)]
all$TC_1 <- TC01_15$number_reads[match(all$name_gen, TC01_15$name_gen)]
all$TC_2 <- TC02_15$number_reads[match(all$name_gen, TC02_15$name_gen)]
all$TC_3 <- TC03_15$number_reads[match(all$name_gen, TC03_15$name_gen)]
all$TC_4 <- TC04_15$number_reads[match(all$name_gen, TC04_15$name_gen)]
all$TC_5 <- TC05_15$number_reads[match(all$name_gen, TC05_15$name_gen)]
all$TS_1 <- TS01_15$number_reads[match(all$name_gen, TS01_15$name_gen)]
all$TS_2 <- TS02_15$number_reads[match(all$name_gen, TS02_15$name_gen)]
all$TS_5 <- TS05_15$number_reads[match(all$name_gen, TS05_15$name_gen)]
all$TC17 <- TC01_17$number_reads[match(all$name_gen, TC01_17$name_gen)]
all$DC47 <- DC04_17$number_reads[match(all$name_gen, DC04_17$name_gen)]
# Remove colname "name_gen"
head(all)
colnames(all)[1]<- ""
head(all)
all<- as.data.frame(all, na.rm=TRUE)
all[is.na(all)]<- 0
sum(all$DC_1)
sum(all$DC_2)
sum(all$DC_3)
sum(all$DC_4)
sum(all$DC_5)
sum(all$DS_1)
sum(all$DS_2)
sum(all$DS_4)
sum(all$TC_1)
sum(all$TC_2)
sum(all$TC_3)
sum(all$TC_4)
sum(all$TC_5)
sum(all$TS_1)
sum(all$TS_2)
sum(all$TS_5)
sum(all$TC17)
sum(all$DC47)
nrow(all[all$DC_1 == 0,])
nrow(all[all$DC_2 == 0,])
nrow(all[all$DC_3 == 0,])
nrow(all[all$DC_4 == 0,])
nrow(all[all$DC_5 == 0,])
nrow(all[all$DS_1 == 0,])
nrow(all[all$DS_2 == 0,])
nrow(all[all$DS_4 == 0,])
nrow(all[all$TC_1 == 0,])
nrow(all[all$TC_2 == 0,])
nrow(all[all$TC_3 == 0,])
nrow(all[all$TC_4 == 0,])
nrow(all[all$TC_5 == 0,])
nrow(all[all$TS_1 == 0,])
nrow(all[all$TS_2 == 0,])
nrow(all[all$TS_5 == 0,])
nrow(all[all$TC_17 == 0,])
nrow(all[all$DC_47 == 0,])
# Export table to .txt format
write.table(all, file="../../data/allreadsgenes.txt", sep = "\t", eol = "\n", dec = ".",
row.names = TRUE, col.names = TRUE)
View(all)
knitr::opts_chunk$set(echo = TRUE)
results_DESeq2<- read.delim("../../data/DGE/DESeq2_TSvsTC_FDR_5.txt") ## TENGO ESTO 2 VECES EN LA MISMA TABLA
results_DESeq2<- read.delim("../../data/DGE/DESeq2_TSvsTC_FDR_5.txt") ## TENGO ESTO 2 VECES EN LA MISMA TABLA
#### Remake and color
results_DESeq2<- results_DESeq2[,1:6]
results_Edge<- read.delim("../../data/DGE/EdgeR_TSvsTC_FDR_5.txt")
```{r Remake and color, echo= FALSE}
# Remake tables with info that I want
results_DESeq2_rt <- data.frame(results_DESeq2[,c(2,5,6)])
results_Edge_rt <- data.frame(results_Edge[,c(1,3,4)])
# up and down in tolerant trees during contingency
results_DESeq2_rt$log2FoldChange<-results_DESeq2_rt$log2FoldChange*(-1)
results_Edge_rt$logFC<-results_Edge_rt$logFC*(-1)
results_DESeq2_rt$sig <- -log10(results_DESeq2$pvalue) ##Create a column with aditional info of FDR (padj)##
results_DESeq2_rt$sigadj <- -log10(results_DESeq2$padj) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sig <- -log10(results_Edge$PValue) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sigadj <- -log10(results_Edge$FDR) ##Create a column with aditional info of FDR (padj)##
##Create a column with colors depending p-adj##
results_DESeq2_rt$TDE <- (results_DESeq2_rt$padj< 0.05) & (abs(results_DESeq2_rt$log2FoldChange) > 1)
results_Edge_rt$TDE <- (results_Edge_rt$FDR< 0.05) & (abs(results_Edge_rt$logFC) > 1)
results_Edge_rt$TDE <- (results_Edge_rt$FDR< 0.05) & (abs(results_Edge_rt$logFC) > 1)
#### Make table
```{r Make table, echo= FALSE}
# Make table with over and down expressed in TOLERANTS
overxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]> 1, ]
downxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]< -1, ]
overxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]> 1, ]
downxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]< -1, ]
View(downxpress_Ds2)
genesDEcomun_over <- intersect(rownames(overxpress_Ds2),rownames(overxpress_Ed))
genesDEcomun_over
genesDEcomun_down <- intersect(rownames(downxpress_Ds2),rownames(downxpress_Ed))
genesDEcomun_down
comun_genes_od <- c(genesDEcomun_over,genesDEcomun_down)
comun_genes_od
# To create column with row name
results_DESeq2_rt$rownames <- rownames(results_DESeq2_rt)
results_Edge_rt$rownames <- rownames(results_Edge_rt)
# To create new data frame with differential expression data (DESeq2 and edgeR)
df_general<- merge(results_DESeq2_rt, results_Edge_rt, by = "rownames",  all.x=TRUE)
colnames(df_general)<- c( "rownames","log2FoldChange_D2","pvalue_D2","padj_D2" ,
"sig_D2", "sigadj_D2","TDE_D2","logFC_ER","PValue_ER",
"FDR_ER", "sig_ER", "sigadj_ER","TDE_ER")
df_general$color <- ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == TRUE), "Col_1", #DESeq2 and EdgeR
ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == FALSE), "Col_2", # Only DESeq2
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == TRUE), "Col_3", # Only EdgeR
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == FALSE), "Col_4", "Col_5"))))# No Differential Expression
rownames(df_general)<- df_general$rownames
# Plot Volcano plot
#Data in HIGH
df_general$log2FoldChange_D2 <-df_general$log2FoldChange_D2*(-1)
# General
write.table(df_general, "../../data/Over_Down/GENERAL_T_170Cvs87SS.txt", sep="\t", row.names=T)
# Plot Volcano plot
ggplot(df_general, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =2.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggsave("../../outputs/8_1_VP_General_sinN_T_170Cvs87SS_D2.tiff")
# Plot Volcano plot
ggplot(df_general, aes(x=logFC_ER, y=sig_ER)) +
geom_point(aes(colour =  color ),size =2.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggsave("../../outputs/8_1_VP_General_sinN_T_170Cvs87SS_ER.tiff")
# Particular
D2_ER_genes <-subset(df_general, subset= color == "Col_1")
D2_ER_genes$rownames
D2_genes <-subset(df_general, subset= color == "Col_2")
D2_genes$rownames
ER_genes <-subset(df_general, subset= color == "Col_3")
ER_genes$rownames
write.table(D2_ER_genes, "../../data/Over_Down/SPECIFIC/D2_ER_T_170Cvs87SS.txt", sep="\t", row.names=T)
write.table(D2_genes, "../../data/Over_Down/SPECIFIC/D2_T_170Cvs87SS.txt", sep="\t", row.names=T)
write.table(ER_genes, "../../data/Over_Down/SPECIFIC/ER_T_170Cvs87SS.txt", sep="\t", row.names=T)
write.table(genesDEcomun_over ,"../../data/Over_Down/SPECIFIC/IDs/IDs_D2_ER_T_170Cvs87SS_overinContingency.txt",sep = "\t", row.names = F, col.names = F)
write.table(genesDEcomun_down ,"../../data/Over_Down/SPECIFIC/IDs/IDs_D2_ER_T_170Cvs87SS_downinContingency.txt",sep = "\t", row.names = F, col.names = F)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
TC01_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR1_S179_sw10L50.genesorder.txt", header= FALSE)
TC02_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR2_S180_sw10L50.genesorder.txt", header= FALSE)
TC03_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR3_S181_sw10L50.genesorder.txt", header= FALSE)
TC04_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR4_S182_sw10L50.genesorder.txt", header= FALSE)
TC05_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR5_S183_sw10L50.genesorder.txt", header= FALSE)
TS01_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR11_S189_sw10L50.genesorder.txt", header= FALSE)
TS02_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR12_S190_sw10L50.genesorder.txt", header= FALSE)
TS05_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR13_S191_sw10L50.genesorder.txt", header= FALSE)
DC01_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR6_S184_sw10L50.genesorder.txt", header= FALSE)
DC02_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR7_S185_sw10L50.genesorder.txt", header= FALSE)
DC03_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR8_S186_sw10L50.genesorder.txt", header= FALSE)
DC04_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR9_S187_sw10L50.genesorder.txt", header= FALSE)
DC05_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR10_S188_sw10L50.genesorder.txt", header= FALSE)
DS01_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR14_S192_sw10L50.genesorder.txt", header= FALSE)
DS02_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR15_S193_sw10L50.genesorder.txt", header= FALSE)
DS04_15<-read.delim("../../data/TXT/GENES_ORDER/DPVR16_S194_sw10L50.genesorder.txt", header= FALSE)
TC01_17<-read.delim("../../data/TXT/GENES_ORDER/DPVR17_S195_sw10L50.genesorder.txt", header= FALSE)
DC04_17<-read.delim("../../data/TXT/GENES_ORDER/DPVR18_S196_sw10L50.genesorder.txt", header= FALSE)
head(DC05_15)
colnames(DC01_15)<- c("number_reads", "name_gen")
colnames(DC02_15)<- c("number_reads", "name_gen")
colnames(DC03_15)<- c("number_reads", "name_gen")
colnames(DC04_15)<- c("number_reads", "name_gen")
colnames(DC05_15)<- c("number_reads", "name_gen")
colnames(DS01_15)<- c("number_reads", "name_gen")
colnames(DS02_15)<- c("number_reads", "name_gen")
colnames(DS04_15)<- c("number_reads", "name_gen")
colnames(TC01_15)<- c("number_reads", "name_gen")
colnames(TC02_15)<- c("number_reads", "name_gen")
colnames(TC03_15)<- c("number_reads", "name_gen")
colnames(TC04_15)<- c("number_reads", "name_gen")
colnames(TC05_15)<- c("number_reads", "name_gen")
colnames(TS01_15)<- c("number_reads", "name_gen")
colnames(TS02_15)<- c("number_reads", "name_gen")
colnames(TS05_15)<- c("number_reads", "name_gen")
colnames(TC01_17)<- c("number_reads", "name_gen")
colnames(DC04_17)<- c("number_reads", "name_gen")
head(DC04_17)
all<-read.delim("../../metadata/Name_genes.txt", header= FALSE)
colnames(all)<- "name_gen"
all$DC_1 <- DC01_15$number_reads[match(all$name_gen, DC01_15$name_gen)]
all$DC_2 <- DC02_15$number_reads[match(all$name_gen, DC02_15$name_gen)]
all$DC_3 <- DC03_15$number_reads[match(all$name_gen, DC03_15$name_gen)]
all$DC_4 <- DC04_15$number_reads[match(all$name_gen, DC04_15$name_gen)]
all$DC_5 <- DC05_15$number_reads[match(all$name_gen, DC05_15$name_gen)]
all$DS_1 <- DS01_15$number_reads[match(all$name_gen, DS01_15$name_gen)]
all$DS_2 <- DS02_15$number_reads[match(all$name_gen, DS02_15$name_gen)]
all$DS_4 <- DS04_15$number_reads[match(all$name_gen, DS04_15$name_gen)]
all$TC_1 <- TC01_15$number_reads[match(all$name_gen, TC01_15$name_gen)]
all$TC_2 <- TC02_15$number_reads[match(all$name_gen, TC02_15$name_gen)]
all$TC_3 <- TC03_15$number_reads[match(all$name_gen, TC03_15$name_gen)]
all$TC_4 <- TC04_15$number_reads[match(all$name_gen, TC04_15$name_gen)]
all$TC_5 <- TC05_15$number_reads[match(all$name_gen, TC05_15$name_gen)]
all$TS_1 <- TS01_15$number_reads[match(all$name_gen, TS01_15$name_gen)]
all$TS_2 <- TS02_15$number_reads[match(all$name_gen, TS02_15$name_gen)]
all$TS_5 <- TS05_15$number_reads[match(all$name_gen, TS05_15$name_gen)]
all$TC17 <- TC01_17$number_reads[match(all$name_gen, TC01_17$name_gen)]
all$DC47 <- DC04_17$number_reads[match(all$name_gen, DC04_17$name_gen)]
# Remove colname "name_gen"
head(all)
colnames(all)[1]<- ""
head(all)
all<- as.data.frame(all, na.rm=TRUE)
all[is.na(all)]<- 0
sum(all$DC_1)
sum(all$DC_2)
sum(all$DC_3)
sum(all$DC_4)
sum(all$DC_5)
sum(all$DS_1)
sum(all$DS_2)
sum(all$DS_4)
sum(all$TC_1)
sum(all$TC_2)
sum(all$TC_3)
sum(all$TC_4)
sum(all$TC_5)
sum(all$TS_1)
sum(all$TS_2)
sum(all$TS_5)
sum(all$TC17)
sum(all$DC47)
nrow(all[all$DC_1 == 0,])
nrow(all[all$DC_2 == 0,])
nrow(all[all$DC_3 == 0,])
nrow(all[all$DC_4 == 0,])
nrow(all[all$DC_5 == 0,])
nrow(all[all$DS_1 == 0,])
nrow(all[all$DS_2 == 0,])
nrow(all[all$DS_4 == 0,])
nrow(all[all$TC_1 == 0,])
nrow(all[all$TC_2 == 0,])
nrow(all[all$TC_3 == 0,])
nrow(all[all$TC_4 == 0,])
nrow(all[all$TC_5 == 0,])
nrow(all[all$TS_1 == 0,])
nrow(all[all$TS_2 == 0,])
nrow(all[all$TS_5 == 0,])
nrow(all[all$TC_17 == 0,])
nrow(all[all$DC_47 == 0,])
# Export table to .txt format
write.table(all, file="../../data/allreadsgenes.txt", sep = "\t", eol = "\n", dec = ".",
row.names = TRUE, col.names = TRUE)
View(all)
